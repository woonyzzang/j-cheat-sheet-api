{
    "cards": [
        {
            "title": "Selectors",
            "items": [
                {
                    "subject": "Attribute",
                    "list": [
                        {
                            "link": "http://api.jquery.com/attribute-contains-prefix-selector/",
                            "tooltlp": "지정된 속성의 값이 지정된 문자열과 같거나 해당 문자열 뒤에 하이픈(-)이 있는 요소를 선택",
                            "value": "[name|=\"value\"]",
                            "exceptionValue": "{{name|=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-contains-selector/",
                            "tooltlp": "지정된 하위 문자열을 포함하는 값으로 지정된 속성을 가진 요소 선택",
                            "value": "[name*=\"value\"]",
                            "exceptionValue": "{{name*=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-contains-word-selector/",
                            "tooltlp": "지정된 단어가 포함된 값으로 지정된 속성을 가진 요소 선택(공백으로 구분)",
                            "value": "[name~=\"value\"]",
                            "exceptionValue": "{{name~=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-ends-with-selector/",
                            "tooltlp": "지정된 속성이 지정된 문자열로 정확히 끝나는 값을 가진 요소를 선택. 비교는 대소문자를 구분",
                            "value": "[name$=\"value\"]",
                            "exceptionValue": "{{name$=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-equals-selector/",
                            "tooltlp": "값이 특정 값과 정확히 같은 지정된 속성을 가진 요소 선택",
                            "value": "[name=\"value\"]",
                            "exceptionValue": "{{name=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-not-equal-selector/",
                            "tooltlp": "지정된 특성이 없거나 지정된 특성이 있지만 특정 값이 없는 요소를 선택",
                            "value": "[name!=\"value\"]",
                            "exceptionValue": "{{name!=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/attribute-starts-with-selector/",
                            "tooltlp": "지정된 문자열로 정확히 시작하는 값으로 지정된 속성을 가진 요소 선택",
                            "value": "[name^=\"value\"]",
                            "exceptionValue": "{{name^=value}}"
                        },
                        {
                            "link": "http://api.jquery.com/has-attribute-selector/",
                            "tooltlp": "값이 지정된 특성을 가진 요소 선택",
                            "value": "[name]",
                            "exceptionValue": "{{name}}"
                        },
                        {
                            "link": "http://api.jquery.com/multiple-attribute-selector/",
                            "tooltlp": "지정된 모든 특성 필터와 일치하는 요소 선택",
                            "value": "[name=\"value\"][name2=\"value2\"]",
                            "exceptionValue": "{{name=value}}{{name2=value2}}"
                        }
                    ]
                },
                {
                    "subject": "Forms",
                    "list": [
                        {
                            "link": "http://api.jquery.com/button-selector/",
                            "tooltlp": "유형 버튼의 모든 버튼 요소 및 요소를 선택",
                            "value": ":button"
                        },
                        {
                            "link": "http://api.jquery.com/checkbox-selector/",
                            "tooltlp": "유형의 모든 요소 확인란을 선택",
                            "value": ":checkbox"
                        },
                        {
                            "link": "http://api.jquery.com/checked-selector/",
                            "tooltlp": "검사된 모든 요소 일치",
                            "value": ":checked"
                        },
                        {
                            "link": "http://api.jquery.com/disabled-selector/",
                            "tooltlp": "비활성화된 모든 요소를 선택",
                            "value": ":disabled"
                        },
                        {
                            "link": "http://api.jquery.com/enabled-selector/",
                            "tooltlp": "활성화된 요소를 모두 선택",
                            "value": ":enabled"
                        },
                        {
                            "link": "http://api.jquery.com/focus-selector/",
                            "tooltlp": "현재 초점을 맞추고 있는 요소를 선택",
                            "value": ":focus"
                        },
                        {
                            "link": "http://api.jquery.com/file-selector/",
                            "tooltlp": "파일유형 모든 요소를 선택",
                            "value": ":file"
                        },
                        {
                            "link": "http://api.jquery.com/image-selector/",
                            "tooltlp": "이미지의 모든 요소를 선택",
                            "value": ":image"
                        },
                        {
                            "link": "http://api.jquery.com/input-selector/",
                            "tooltlp": "모든 input, textarea, select, button 요소 선택",
                            "value": ":input"
                        },
                        {
                            "link": "http://api.jquery.com/password-selector/",
                            "tooltlp": "암호 유형의 모든 요소를 선택",
                            "value": ":password"
                        },
                        {
                            "link": "http://api.jquery.com/radio-selector/",
                            "tooltlp": "라디오 유형의 모든 요소를 선택",
                            "value": ":radio"
                        },
                        {
                            "link": "http://api.jquery.com/reset-selector/",
                            "tooltlp": "모든 유형의 재설정 요소 선택",
                            "value": ":reset"
                        },
                        {
                            "link": "http://api.jquery.com/selected-selector/",
                            "tooltlp": "선택한 모든 요소를 선택",
                            "value": ":selected"
                        },
                        {
                            "link": "http://api.jquery.com/submit-selector/",
                            "tooltlp": "제출 유형의 모든 요소를 선택",
                            "value": ":submit"
                        },
                        {
                            "link": "http://api.jquery.com/text-selector/",
                            "tooltlp": "텍스트 유형의 모든 요소를 선택",
                            "value": ":text"
                        }
                    ]
                },
                {
                    "subject": "Basics",
                    "list": [
                        {
                            "link": "http://api.jquery.com/all-selector/",
                            "tooltlp": "모든 요소를 선택",
                            "value": "*"
                        },
                        {
                            "link": "http://api.jquery.com/class-selector/",
                            "tooltlp": "지정된 클래스로 모든 요소를 선택",
                            "value": ".class",
                            "exceptionValue": "{{class}}"
                        },
                        {
                            "link": "http://api.jquery.com/element-selector/",
                            "tooltlp": "지정된 태그 이름을 가진 모든 요소를 선택",
                            "value": "element"
                        },
                        {
                            "link": "http://api.jquery.com/id-selector/",
                            "tooltlp": "지정된 ID 속성을 가진 단일 요소를 선택",
                            "value": "#id"
                        },
                        {
                            "link": "http://api.jquery.com/multiple-selector/",
                            "tooltlp": "지정된 모든 선택자의 결합된 결과 선택",
                            "value": "selector1, selectorN, ...",
                            "exceptionValue": "{{selectorN}}"
                        }
                    ]
                },
                {
                    "subject": "Visibility Filters",
                    "list": [
                        {
                            "link": "http://api.jquery.com/hidden-selector/",
                            "tooltlp": "숨겨진 모든 요소 선택",
                            "value": ":hidden"
                        },
                        {
                            "link": "http://api.jquery.com/visible-selector/",
                            "tooltlp": "표시되는 모든 요소 선택",
                            "value": ":visible"
                        }
                    ]
                },
                {
                    "subject": "Basic Filters",
                    "list": [
                        {
                            "link": "http://api.jquery.com/animated-selector/",
                            "tooltlp": "선택자가 실행될 때 애니메이션이 진행 중인 모든 요소 선택",
                            "value": ":animated"
                        },
                        {
                            "link": "http://api.jquery.com/eq-selector/",
                            "tooltlp": "일치하는 세트 내의 색인 n에서 요소 선택",
                            "value": ":eq()"
                        },
                        {
                            "link": "http://api.jquery.com/even-selector/",
                            "tooltlp": "0인치로 표시된 짝수 요소 선택 또한 홀수를 참조",
                            "value": ":even"
                        },
                        {
                            "link": "http://api.jquery.com/first-selector/",
                            "tooltlp": "첫 번째 일치하는 요소를 선택",
                            "value": ":first"
                        },
                        {
                            "link": "http://api.jquery.com/gt-selector/",
                            "tooltlp": "일치하는 세트 내의 인덱스보다 큰 인덱스에서 모든 요소를 선택",
                            "value": ":gt()"
                        },
                        {
                            "link": "http://api.jquery.com/header-selector/",
                            "tooltlp": "헤더인 모든 요소(예: h1, h2, h3 등)를 선택",
                            "value": ":header"
                        },
                        {
                            "link": "http://api.jquery.com/last-selector/",
                            "tooltlp": "마지막으로 일치하는 요소 선택",
                            "value": ":last"
                        },
                        {
                            "link": "http://api.jquery.com/lt-selector/",
                            "tooltlp": "일치하는 세트 내의 인덱스보다 작은 인덱스에서 모든 요소를 선택",
                            "value": ":lt()"
                        },
                        {
                            "link": "http://api.jquery.com/not-selector/",
                            "tooltlp": "지정된 선택자와 일치하지 않는 모든 요소를 선택",
                            "value": ":not()"
                        },
                        {
                            "link": "http://api.jquery.com/odd-selector/",
                            "tooltlp": "0인치로 구분된 홀수 요소 선택 참고 항목 짝수",
                            "value": ":odd"
                        }
                    ]
                },
                {
                    "subject": "Child Filters",
                    "list": [
                        {
                            "link": "http://api.jquery.com/first-child-selector/",
                            "tooltlp": "부모의 첫 번째 자식인 모든 요소 선택",
                            "value": ":first-child"
                        },
                        {
                            "link": "http://api.jquery.com/last-child-selector/",
                            "tooltlp": "부모의 마지막 자녀인 모든 요소 선택",
                            "value": ":last-child"
                        },
                        {
                            "link": "http://api.jquery.com/nth-child-selector/",
                            "tooltlp": "해당 부모의 n번째 자식인 모든 요소 선택",
                            "value": ":nth-child()"
                        },
                        {
                            "link": "http://api.jquery.com/only-child-selector/",
                            "tooltlp": "부모의 유일한 자식인 모든 요소 선택",
                            "value": ":only-child"
                        }
                    ]
                },
                {
                    "subject": "Content Filters",
                    "list": [
                        {
                            "link": "http://api.jquery.com/contains-selector/",
                            "tooltlp": "지정된 텍스트를 포함하는 모든 요소 선택",
                            "value": ":contains()"
                        },
                        {
                            "link": "http://api.jquery.com/empty-selector/",
                            "tooltlp": "하위 항목이 없는 모든 요소 선택(텍스트 노드 포함)",
                            "value": ":empty"
                        },
                        {
                            "link": "http://api.jquery.com/has-selector/",
                            "tooltlp": "지정된 선택자와 일치하는 요소를 하나 이상 포함하는 요소 선택",
                            "value": ":has()"
                        },
                        {
                            "link": "http://api.jquery.com/parent-selector/",
                            "tooltlp": "텍스트 노드를 포함하여 다른 요소의 상위인 모든 요소 선택",
                            "value": ":parent"
                        }
                    ]
                },
                {
                    "subject": "Hierarchy",
                    "list": [
                        {
                            "link": "http://api.jquery.com/child-selector/",
                            "tooltlp": "'parent'로 지정된 요소의 'child'로 지정된 모든 직접 하위 요소 선택",
                            "value": "parent > child"
                        },
                        {
                            "link": "http://api.jquery.com/descendant-selector/",
                            "tooltlp": "지정된 조상의 하위 항목인 모든 요소 선택",
                            "value": "ancestor descendant"
                        },
                        {
                            "link": "http://api.jquery.com/next-adjacent-Selector/",
                            "tooltlp": "형제 'prev' 바로 앞에 있는 'next'과 일치하는 다음 요소를 모두 선택",
                            "value": "prev + next"
                        },
                        {
                            "link": "http://api.jquery.com/next-siblings-selector/",
                            "tooltlp": "'prev' 요소 다음에 이어지는 모든 형제 요소를 선택하고, 동일한 부모를 가졌으며, 필터링 'siblings' 셀렉터와 일치",
                            "value": "prev ~ siblings"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Attributes / CSS",
            "items": [
                {
                    "subject": "Attributes",
                    "list": [
                        {
                            "link": "http://api.jquery.com/attr/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 특성 값 가져오기",
                            "value": ".attr()"
                        },
                        {
                            "link": "http://api.jquery.com/prop/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 속성 값 가져오기",
                            "value": ".prop()"
                        },
                        {
                            "link": "http://api.jquery.com/removeAttr/",
                            "tooltlp": "일치하는 요소 집합의 각 요소에서 특성 제거",
                            "value": ".removeAttr()"
                        },
                        {
                            "link": "http://api.jquery.com/removeProp/",
                            "tooltlp": "일치하는 요소 집합에 대한 속성 제거",
                            "value": ".removeProp()"
                        },
                        {
                            "link": "http://api.jquery.com/val/",
                            "tooltlp": "일치하는 요소 집합에서 첫 번째 요소의 현재 값 가져오기",
                            "value": ".val()"
                        }
                    ]
                },
                {
                    "subject": "CSS",
                    "list": [
                        {
                            "link": "http://api.jquery.com/addClass/",
                            "tooltlp": "일치하는 각 요소 집합에 지정된 클래스 추가",
                            "value": ".addClass()"
                        },
                        {
                            "link": "http://api.jquery.com/css/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 스타일 특성 값 가져오기",
                            "value": ".css()"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.cssHooks/",
                            "tooltlp": "특정 CSS 속성을 검색하거나 설정하는 방법을 재정의하기 위해 jQuery에 직접 연결할 수 있는 방법을 제공. 다른 용도 중에서도 cssHook을 사용하여 박스 쉐도우 및 그라데이션과 같은 CSS3 기능에 대한 사용자 지정 브라우저 정규화된 속성을 만들 수 있음",
                            "value": "jQuery.cssHooks"
                        },
                        {
                            "link": "http://api.jquery.com/hasClass/",
                            "tooltlp": "일치하는 요소가 지정된 클래스에 할당되었는지 확인",
                            "value": ".hasClass()"
                        },
                        {
                            "link": "http://api.jquery.com/removeClass/",
                            "tooltlp": "일치하는 요소 집합의 각 요소에서 단일 클래스, 다중 클래스 또는 모든 클래스 제거",
                            "value": ".removeClass()"
                        },
                        {
                            "link": "http://api.jquery.com/toggleClass/",
                            "tooltlp": "일치 요소 집합의 각 요소에서 클래스의 존재 또는 스위치 인자의 값에 따라 하나 이상의 클래스를 추가하거나 제거",
                            "value": ".toggleClass()"
                        }
                    ]
                },
                {
                    "subject": "Dimensions",
                    "list": [
                        {
                            "link": "http://api.jquery.com/height/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 현재 계산된 높이 가져오기",
                            "value": ".height()",
                            "exceptionValue": "{{height()}}"
                        },
                        {
                            "link": "http://api.jquery.com/innerHeight/",
                            "tooltlp": "패딩을 포함하지만 테두리가 아닌 일치 요소 집합의 첫 번째 요소에 대해 현재 계산된 높이 가져오기",
                            "value": ".innerHeight()",
                            "exceptionValue": "{{innerHeight()}}"
                        },
                        {
                            "link": "http://api.jquery.com/innerWidth/",
                            "tooltlp": "패딩을 포함하되 테두리는 포함하지 않는 일치 요소 집합의 첫 번째 요소에 대한 현재 계산된 너비",
                            "value": ".innerWidth()",
                            "exceptionValue": "{{innerWidth()}}"
                        },
                        {
                            "link": "http://api.jquery.com/outerHeight/",
                            "tooltlp": "패딩, 테두리 및 선택적 여유 등 일치하는 요소 집합의 첫 번째 요소에 대한 현재 계산된 높이 가져오기",
                            "value": ".outerHeight()",
                            "exceptionValue": "{{outerHeight()}}"
                        },
                        {
                            "link": "http://api.jquery.com/outerWidth/",
                            "tooltlp": "패딩 및 테두리를 포함하여 일치하는 요소 집합의 첫 번째 요소에 대한 현재 계산된 폭 가져오기",
                            "value": ".outerWidth()",
                            "exceptionValue": "{{outerWidth()}}"
                        },
                        {
                            "link": "http://api.jquery.com/width/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 현재 계산된 폭 가져오기",
                            "value": ".width()",
                            "exceptionValue": "{{width()}}"
                        }
                    ]
                },
                {
                    "subject": "Offset",
                    "list": [
                        {
                            "link": "http://api.jquery.com/offset/",
                            "tooltlp": "일치하는 요소 집합에서 문서를 기준으로 첫 번째 요소의 현재 좌표 가져오기",
                            "value": ".offset()",
                            "exceptionValue": "{{offset()}}"
                        },
                        {
                            "link": "http://api.jquery.com/offsetParent/",
                            "tooltlp": "배치되는 가장 가까운 상위 요소 가져오기",
                            "value": ".offsetParent()",
                            "exceptionValue": "{{offsetParent()}}"
                        },
                        {
                            "link": "http://api.jquery.com/position/",
                            "tooltlp": "일치하는 요소 집합에서 간격띄우기 상위 집합을 기준으로 첫 번째 요소의 현재 좌표 가져오기",
                            "value": ".position()",
                            "exceptionValue": "{{position()}}"
                        },
                        {
                            "link": "http://api.jquery.com/scrollLeft/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 스크롤 막대의 현재 수평 위치 가져오기",
                            "value": ".scrollLeft()",
                            "exceptionValue": "{{scrollLeft()}}"
                        },
                        {
                            "link": "http://api.jquery.com/scrollTop/",
                            "tooltlp": "일치하는 요소 집합의 첫 번째 요소에 대한 스크롤 막대의 현재 수직 위치 가져오기",
                            "value": ".scrollTop()",
                            "exceptionValue": "{{scrollTop()}}"
                        }
                    ]
                },
                {
                    "subject": "Data",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.data/",
                            "tooltlp": "지정된 요소와 연결된 임의 데이터 저장",
                            "value": "jQuery.data()"
                        },
                        {
                            "link": "http://api.jquery.com/data/",
                            "tooltlp": "일치하는 요소와 연결된 임의 데이터 저장",
                            "value": ".data()",
                            "exceptionValue": "{{data()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.hasData/",
                            "tooltlp": "요소에 관련된 jQuery 데이터가 있는지 확인",
                            "value": "jQuery.hasData()"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.removeData/",
                            "tooltlp": "이전에 저장된 데이터 조각 제거",
                            "value": "jQuery.removeData()"
                        },
                        {
                            "link": "http://api.jquery.com/removeData/",
                            "tooltlp": "이전에 저장된 데이터 조각 제거",
                            "value": ".removeData()",
                            "exceptionValue": "{{removeData()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Manipulation",
            "items": [
                {
                    "subject": "Copying",
                    "list": [
                        {
                            "link": "http://api.jquery.com/clone/",
                            "tooltlp": "일치하는 요소 집합의 깊은 사본 생성",
                            "value": ".clone()",
                            "exceptionValue": "{{clone()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Insertion, Around",
                    "list": [
                        {
                            "link": "http://api.jquery.com/wrap/",
                            "tooltlp": "일치하는 요소 집합의 각 요소 주위에 HTML 구조 배치",
                            "value": ".wrap()",
                            "exceptionValue": "{{wrap()}}"
                        },
                        {
                            "link": "http://api.jquery.com/wrapAll/",
                            "tooltlp": "일치하는 요소 집합의 모든 요소 주위에 HTML 구조 배치",
                            "value": ".wrapAll()",
                            "exceptionValue": "{{wrapAll()}}"
                        },
                        {
                            "link": "http://api.jquery.com/wrapInner/",
                            "tooltlp": "일치하는 요소 집합에서 각 요소의 내용 주위에 HTML 구조 배치",
                            "value": ".wrapInner()",
                            "exceptionValue": "{{wrapInner()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Insertion, Inside",
                    "list": [
                        {
                            "link": "http://api.jquery.com/append/",
                            "tooltlp": "일치하는 요소 집합의 각 요소 끝에 매개변수로 지정된 내용을 삽입",
                            "value": ".append()",
                            "exceptionValue": "{{append()}}"
                        },
                        {
                            "link": "http://api.jquery.com/appendTo/",
                            "tooltlp": "일치하는 요소 집합의 모든 요소를 대상 끝에 삽입",
                            "value": ".appendTo()",
                            "exceptionValue": "{{appendTo()}}"
                        },
                        {
                            "link": "http://api.jquery.com/html/",
                            "tooltlp": "일치하는 요소 집합에서 첫 번째 요소의 HTML 내용 가져오기",
                            "value": ".html()",
                            "exceptionValue": "{{html()}}"
                        },
                        {
                            "link": "http://api.jquery.com/prepend/",
                            "tooltlp": "일치하는 요소 집합의 각 요소의 시작 부분에 매개변수로 지정된 내용 삽입",
                            "value": ".prepend()",
                            "exceptionValue": "{{prepend()}}"
                        },
                        {
                            "link": "http://api.jquery.com/prependTo/",
                            "tooltlp": "일치하는 요소 집합의 모든 요소를 대상의 시작 부분에 삽입",
                            "value": ".prependTo()",
                            "exceptionValue": "{{prependTo()}}"
                        },
                        {
                            "link": "http://api.jquery.com/text/",
                            "tooltlp": "일치하는 요소 집합에서 하위 항목을 포함하여 각 요소의 결합된 텍스트 내용 가져오기",
                            "value": ".text()",
                            "exceptionValue": "{{text()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Insertion, Outside",
                    "list": [
                        {
                            "link": "http://api.jquery.com/after/",
                            "tooltlp": "일치하는 요소 집합의 각 요소 뒤에 매개변수로 지정된 내용을 삽입",
                            "value": ".after()",
                            "exceptionValue": "{{after()}}"
                        },
                        {
                            "link": "http://api.jquery.com/before/",
                            "tooltlp": "일치하는 요소 집합의 각 요소 앞에 매개변수로 지정된 내용을 삽입",
                            "value": ".before()",
                            "exceptionValue": "{{before()}}"
                        },
                        {
                            "link": "http://api.jquery.com/insertAfter/",
                            "tooltlp": "대상 뒤에 일치하는 요소 집합의 모든 요소를 삽입",
                            "value": ".insertAfter()",
                            "exceptionValue": "{{insertAfter()}}"
                        },
                        {
                            "link": "http://api.jquery.com/insertBefore/",
                            "tooltlp": "일치하는 요소 집합의 모든 요소를 대상 앞에 삽입",
                            "value": ".insertBefore()",
                            "exceptionValue": "{{insertBefore()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Removal",
                    "list": [
                        {
                            "link": "http://api.jquery.com/detach/",
                            "tooltlp": "DOM에서 일치하는 요소 집합을 제거",
                            "value": ".detach()",
                            "exceptionValue": "{{detach()}}"
                        },
                        {
                            "link": "http://api.jquery.com/empty/",
                            "tooltlp": "일치하는 요소 집합의 모든 하위 노드를 DOM에서 제거",
                            "value": ".empty()",
                            "exceptionValue": "{{empty()}}"
                        },
                        {
                            "link": "http://api.jquery.com/remove/",
                            "tooltlp": "DOM에서 일치하는 요소 집합 제거",
                            "value": ".remove()",
                            "exceptionValue": "{{remove()}}"
                        },
                        {
                            "link": "http://api.jquery.com/unwrap/",
                            "tooltlp": "일치하는 요소 집합의 부모들을 DOM에서 제거하여 일치하는 요소를 제자리에 두십",
                            "value": ".unwrap()",
                            "exceptionValue": "{{unwrap()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Replacement",
                    "list": [
                        {
                            "link": "http://api.jquery.com/replaceAll/",
                            "tooltlp": "각 대상 요소를 일치된 요소 집합으로 교체",
                            "value": ".replaceAll()",
                            "exceptionValue": "{{replaceAll()}}"
                        },
                        {
                            "link": "http://api.jquery.com/replaceWith/",
                            "tooltlp": "일치하는 요소 집합의 각 요소를 제공된 새 컨텐츠로 교체",
                            "value": ".replaceWith()",
                            "exceptionValue": "{{replaceWith()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Traversing",
            "items": [
                {
                    "subject": "Filtering",
                    "list": [
                        {
                            "link": "http://api.jquery.com/eq/",
                            "tooltlp": "일치하는 요소 집합을 지정된 색인에 있는 것으로 줄임",
                            "value": ".eq()",
                            "exceptionValue": "{{eq()}}"
                        },
                        {
                            "link": "http://api.jquery.com/filter/",
                            "tooltlp": "일치하는 요소 집합을 선택자와 일치하거나 기능의 테스트를 통과한 요소 집합으로 줄임",
                            "value": ".filter()",
                            "exceptionValue": "{{filter()}}"
                        },
                        {
                            "link": "http://api.jquery.com/first/",
                            "tooltlp": "일치하는 요소 집합을 세트의 첫 번째 항목으로 축소",
                            "value": ".first()",
                            "exceptionValue": "{{first()}}"
                        },
                        {
                            "link": "http://api.jquery.com/has/",
                            "tooltlp": "일치하는 요소 집합을 선택자 또는 DOM 요소와 일치하는 하위 항목으로 축소",
                            "value": ".has()",
                            "exceptionValue": "{{has()}}"
                        },
                        {
                            "link": "http://api.jquery.com/is/",
                            "tooltlp": "셀렉터에 대해 현재 일치하는 요소 집합을 확인하고 이러한 요소 중 하나 이상이 셀렉터와 일치할 경우 true를 반환",
                            "value": ".is()",
                            "exceptionValue": "{{is()}}"
                        },
                        {
                            "link": "http://api.jquery.com/last/",
                            "tooltlp": "일치하는 요소 집합을 세트의 마지막 요소 집합으로 축소",
                            "value": ".last()",
                            "exceptionValue": "{{last()}}"
                        },
                        {
                            "link": "http://api.jquery.com/map/",
                            "tooltlp": "현재 일치된 세트의 각 요소를 함수를 통과시켜 반환 값을 포함하는 새로운 jQuery 객체를 생성",
                            "value": ".map()",
                            "exceptionValue": "{{map()}}"
                        },
                        {
                            "link": "http://api.jquery.com/not/",
                            "tooltlp": "일치하는 요소 집합에서 요소를 제거",
                            "value": ".not()",
                            "exceptionValue": "{{not()}}"
                        },
                        {
                            "link": "http://api.jquery.com/slice/",
                            "tooltlp": "일치하는 요소 집합을 지수 범위에 의해 지정된 부분 집합으로 축소",
                            "value": ".slice()",
                            "exceptionValue": "{{slice()}}"
                        }
                    ]
                },
                {
                    "subject": "Miscellaneous Traversing",
                    "list": [
                        {
                            "link": "http://api.jquery.com/add/",
                            "tooltlp": "일치하는 요소 집합에 요소를 추가",
                            "value": ".add()",
                            "exceptionValue": "{{add()}}"
                        },
                        {
                            "link": "http://api.jquery.com/andSelf/",
                            "tooltlp": "스택의 이전 요소 세트를 현재 세트에 추가",
                            "value": ".andSelf()",
                            "exceptionValue": "{{andSelf()}}"
                        },
                        {
                            "link": "http://api.jquery.com/contents/",
                            "tooltlp": "텍스트 및 설명 노드를 포함하여 일치하는 요소 집합에서 각 요소의 하위 항목을 가져옴",
                            "value": ".contents()",
                            "exceptionValue": "{{contents()}}"
                        },
                        {
                            "link": "http://api.jquery.com/end/",
                            "tooltlp": "현재 체인의 최근 필터링 작업을 종료하고 일치하는 요소 집합을 이전 상태로 되돌림",
                            "value": ".end()",
                            "exceptionValue": "{{end()}}"
                        }
                    ]
                },
                {
                    "subject": "Tree Traversal",
                    "list": [
                        {
                            "link": "http://api.jquery.com/children/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치하는 요소 집합의 각 요소의 하위 항목을 가져옴",
                            "value": ".children()",
                            "exceptionValue": "{{children()}}"
                        },
                        {
                            "link": "http://api.jquery.com/closest/",
                            "tooltlp": "현재 요소에서 시작하여 DOM 트리를 통해 위로 진행하면서 셀렉터와 일치하는 첫 번째 조상 요소를 가져옴",
                            "value": ".closest()",
                            "exceptionValue": "{{closest()}}"
                        },
                        {
                            "link": "http://api.jquery.com/find/",
                            "tooltlp": "현재 일치하는 요소 집합에서 선택자로 필터링한 각 요소의 하위 집합을 가져옴",
                            "value": ".find()",
                            "exceptionValue": "{{find()}}"
                        },
                        {
                            "link": "http://api.jquery.com/next/",
                            "tooltlp": "일치하는 요소 집합에서 각 요소의 바로 뒤에 있는 형제를 선택. 선택자가 제공된 경우, 선택자와 일치하는 경우에만 다음 형제를 검색",
                            "value": ".next()",
                            "exceptionValue": "{{next()}}"
                        },
                        {
                            "link": "http://api.jquery.com/nextAll/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치 요소 집합에서 각 요소의 다음 형제자매를 모두 가져옴",
                            "value": ".nextAll()",
                            "exceptionValue": "{{nextAll()}}"
                        },
                        {
                            "link": "http://api.jquery.com/nextUntil/",
                            "tooltlp": "셀렉터에 일치하는 요소를 포함하지 않고 각 요소의 후속 형제자매 모두를 위로 이동시킴",
                            "value": ".nextUntil()",
                            "exceptionValue": "{{nextUntil()}}"
                        },
                        {
                            "link": "http://api.jquery.com/parent/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치 요소의 현재 집합에서 각 요소의 상위 항목을 가져옴",
                            "value": ".parent()",
                            "exceptionValue": "{{parent()}}"
                        },
                        {
                            "link": "http://api.jquery.com/parents/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 현재 일치하는 요소 집합에서 각 요소의 조상을 구함",
                            "value": ".parents()",
                            "exceptionValue": "{{parents()}}"
                        },
                        {
                            "link": "http://api.jquery.com/parentsUntil/",
                            "tooltlp": "선택자와 일치하는 요소를 포함하지 않고 현재 일치하는 요소 집합에서 각 요소의 조상을 구함",
                            "value": ".parentsUntil()",
                            "exceptionValue": "{{parentsUntil()}}"
                        },
                        {
                            "link": "http://api.jquery.com/prev/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치 요소 집합에서 각 요소의 바로 앞의 형제 가져옴",
                            "value": ".prev()",
                            "exceptionValue": "{{prev()}}"
                        },
                        {
                            "link": "http://api.jquery.com/prevAll/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치 요소 집합에서 각 요소의 모든 선행 형제자매를 가져옴",
                            "value": ".prevAll()",
                            "exceptionValue": "{{prevAll()}}"
                        },
                        {
                            "link": "http://api.jquery.com/prevUntil/",
                            "tooltlp": "각 요소의 모든 이전 형제자매에게 선택자와 일치하는 요소를 포함하지 않도록 함",
                            "value": ".prevUntil()",
                            "exceptionValue": "{{prevUntil()}}"
                        },
                        {
                            "link": "http://api.jquery.com/siblings/",
                            "tooltlp": "선택적으로 셀렉터에 의해 필터링된 일치하는 요소 집합의 각 요소의 형제자매를 가져옴",
                            "value": ".siblings()",
                            "exceptionValue": "{{siblings()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Events",
            "items": [
                {
                    "subject": "Event Object",
                    "list": [
                        {
                            "link": "http://api.jquery.com/event.currentTarget/",
                            "tooltlp": "이벤트 버블화 단계 내의 현재 DOM 요소",
                            "value": "event.currentTarget",
                            "exceptionValue": "{{event-currentTarget}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.data/",
                            "tooltlp": "선택적 데이터는 현재 실행 중인 처리기가 바인딩되었을 때 jQuery.fn.bind로 전달",
                            "value": "event.data",
                            "exceptionValue": "{{event-data}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.isDefaultPrevented/",
                            "tooltlp": "event.preventDefault()가 이 이벤트 객체에 대해 호출되었는지 여부를 반환",
                            "value": "event.isDefaultPrevented()",
                            "exceptionValue": "{{event-isDefaultPrevented()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.isImmediatePropagationStopped/",
                            "tooltlp": "event.stopImjimmediatePropagation()이 이 이벤트 객체에 대해 호출되었는지 여부를 반환",
                            "value": "event.isImmediatePropagationStopped()",
                            "exceptionValue": "{{event-isImmediatePropagationStopped()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.isPropagationStopped/",
                            "tooltlp": "event.stopPropagation()이 이 이벤트 객체에 대해 호출되었는지 여부를 반환",
                            "value": "event.isPropagationStopped()",
                            "exceptionValue": "{{event-isPropagationStopped()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.namespace/",
                            "tooltlp": "이벤트가 트리거될 때 지정된 네임스페이스",
                            "value": "event.namespace",
                            "exceptionValue": "{{event-namespace}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.pageX/",
                            "tooltlp": "문서의 왼쪽 가장자리에 대한 마우스 위치",
                            "value": "event.pageX",
                            "exceptionValue": "{{event-pageX}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.pageY/",
                            "tooltlp": "문서의 맨 위 가장자리에 대한 마우스 위치",
                            "value": "event.pageY",
                            "exceptionValue": "{{event-pageY}}"

                        },
                        {
                            "link": "http://api.jquery.com/event.preventDefault/",
                            "tooltlp": "이 메서드를 호출하면 이벤트의 기본 조치가 트리거되지 않음",
                            "value": "event.preventDefault()",
                            "exceptionValue": "{{event-preventDefault()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.relatedTarget/",
                            "tooltlp": "다른 DOM 요소(있는 경우)",
                            "value": "event.relatedTarget",
                            "exceptionValue": "{{event-relatedTarget}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.result/",
                            "tooltlp": "값이 정의되지 않은 경우를 제외하고 이 이벤트에 의해 트리거된 이벤트 핸들러가 반환한 마지막 값",
                            "value": "event.result",
                            "exceptionValue": "{{event-result}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.stopImmediatePropagation/",
                            "tooltlp": "다른 이벤트 핸들러가 호출되는 것을 방지",
                            "value": "event.stopImmediatePropagation()",
                            "exceptionValue": "{{event-stopImmediatePropagation()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.stopPropagation/",
                            "tooltlp": "이벤트가 DOM 트리가 거품이 나는 것을 방지하여 부모 핸들러가 이벤트에 대한 통지를 받지 못하게 함",
                            "value": "event.stopPropagation()",
                            "exceptionValue": "{{event-stopPropagation()}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.target/",
                            "tooltlp": "이벤트를 시작한 DOM 요소",
                            "value": "event.target",
                            "exceptionValue": "{{event-target}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.timeStamp/",
                            "tooltlp": "이벤트가 트리거된 시간과 1970년 1월 1일 사이의 밀리초 차이",
                            "value": "event.timeStamp",
                            "exceptionValue": "{{event-timeStamp}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.type/",
                            "tooltlp": "이벤트의 본질을 기술",
                            "value": "event.type",
                            "exceptionValue": "{{event-type}}"
                        },
                        {
                            "link": "http://api.jquery.com/event.which/",
                            "tooltlp": "키 또는 버튼 이벤트의 경우 이 특성은 누른 특정 버튼 또는 키를 나타냄",
                            "value": "event.which",
                            "exceptionValue": "{{event-which}}"
                        }
                    ]
                },
                {
                    "subject": "Mouse Events",
                    "list": [
                        {
                            "link": "http://api.jquery.com/click/",
                            "tooltlp": "이벤트 핸들러를 'click' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".click()",
                            "exceptionValue": "{{click()}}"
                        },
                        {
                            "link": "http://api.jquery.com/dblclick/",
                            "tooltlp": "이벤트 핸들러를 'dblclick' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".dblclick()",
                            "exceptionValue": "{{dblclick()}}"
                        },
                        {
                            "link": "http://api.jquery.com/focusin/",
                            "tooltlp": "이벤트 핸들러를 'focusin' JavaScript 이벤트에 바인딩",
                            "value": ".focusin()",
                            "exceptionValue": "{{focusin()}}"
                        },
                        {
                            "link": "http://api.jquery.com/focusout/",
                            "tooltlp": "이벤트 핸들러를 'focusout' JavaScript 이벤트에 바인딩",
                            "value": ".focusout()",
                            "exceptionValue": "{{focusout()}}"
                        },
                        {
                            "link": "http://api.jquery.com/hover/",
                            "tooltlp": "마우스 포인터가 요소를 들어오고 나갈 때 실행할 두 핸들러를 일치하는 요소에 바인딩",
                            "value": ".hover()",
                            "exceptionValue": "{{hover()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mousedown/",
                            "tooltlp": "이벤트 핸들러를 'mousedown' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".mousedown()",
                            "exceptionValue": "{{mousedown()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mouseenter/",
                            "tooltlp": "마우스가 요소에 들어갈 때 발사할 이벤트 핸들러를 바인딩하거나 해당 핸들러를 소자에 트리거",
                            "value": ".mouseenter()",
                            "exceptionValue": "{{mouseenter()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mouseleave/",
                            "tooltlp": "마우스가 요소를 떠날 때 발사할 이벤트 핸들러를 바인딩하거나 해당 핸들러를 소자에 트리거",
                            "value": ".mouseleave()",
                            "exceptionValue": "{{mouseleave()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mousemove/",
                            "tooltlp": "이벤트 핸들러를 'mousemove' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".mousemove()",
                            "exceptionValue": "{{mousemove()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mouseout/",
                            "tooltlp": "이벤트 핸들러를 'mouseout' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".mouseout()",
                            "exceptionValue": "{{mouseout()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mouseover/",
                            "tooltlp": "이벤트 핸들러를 'mouseover' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".mouseover()",
                            "exceptionValue": "{{mouseover()}}"
                        },
                        {
                            "link": "http://api.jquery.com/mouseup/",
                            "tooltlp": "이벤트 핸들러를 'mouseup' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".mouseup()",
                            "exceptionValue": "{{mouseup()}}"
                        },
                        {
                            "link": "http://api.jquery.com/toggle-event/",
                            "tooltlp": "두 개 이상의 처리기를 일치하는 요소에 바인딩하여 다른 클릭으로 실행",
                            "value": ".toggle()",
                            "exceptionValue": "{{toggle()}}"
                        }
                    ]
                },
                {
                    "subject": "Browser Events",
                    "list": [
                        {
                            "link": "http://api.jquery.com/error/",
                            "tooltlp": "이벤트 핸들러를 'error' JavaScript 이벤트에 바인딩",
                            "value": ".error()",
                            "exceptionValue": "{{error()}}"
                        },
                        {
                            "link": "http://api.jquery.com/resize/",
                            "tooltlp": "이벤트 핸들러를 'resize' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".resize()",
                            "exceptionValue": "{{resize()}}"
                        },
                        {
                            "link": "http://api.jquery.com/scroll/",
                            "tooltlp": "이벤트 핸들러를 'scroll' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".scroll()",
                            "exceptionValue": "{{scroll()}}"
                        }
                    ]
                },
                {
                    "subject": "Document Loading",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.holdReady/",
                            "tooltlp": "jQuery의 준비 이벤트 실행 보류 또는 해제",
                            "value": ".holdReady()",
                            "exceptionValue": "{{holdReady()}}"
                        },
                        {
                            "link": "http://api.jquery.com/load-event/",
                            "tooltlp": "이벤트 핸들러를 JavaScript 이벤트에 바인딩",
                            "value": ".load()",
                            "exceptionValue": "{{load()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ready/",
                            "tooltlp": "DOM이 완전히 로드되었을 때 실행할 함수를 지정",
                            "value": ".ready()",
                            "exceptionValue": "{{ready()}}"
                        },
                        {
                            "link": "http://api.jquery.com/unload/",
                            "tooltlp": "이벤트 핸들러를 'unload' JavaScript 이벤트에 바인딩",
                            "value": ".unload()",
                            "exceptionValue": "{{unload()}}"
                        }
                    ]
                },
                {
                    "subject": "Event Handler Attachment",
                    "list": [
                        {
                            "link": "http://api.jquery.com/off/",
                            "tooltlp": "이벤트 핸들러를 제거",
                            "value": ".off()",
                            "exceptionValue": "{{off()}}"
                        },
                        {
                            "link": "http://api.jquery.com/on/",
                            "tooltlp": "하나 이상의 이벤트에 대한 이벤트 핸들러 기능을 선택한 요소에 부착",
                            "value": ".on()",
                            "exceptionValue": "{{on()}}"
                        },
                        {
                            "link": "http://api.jquery.com/one/",
                            "tooltlp": "요소를 위한 이벤트에 핸들러를 부착하십시오. 처리기는 요소당 한 번 이상 실행",
                            "value": ".one()",
                            "exceptionValue": "{{one()}}"
                        },
                        {
                            "link": "http://api.jquery.com/trigger/",
                            "tooltlp": "지정된 이벤트 유형에 대해 일치하는 요소에 연결된 모든 핸들러 및 동작을 실행",
                            "value": ".trigger()",
                            "exceptionValue": "{{trigger()}}"
                        },
                        {
                            "link": "http://api.jquery.com/triggerHandler/",
                            "tooltlp": "이벤트에 대해 요소에 연결된 모든 핸들러를 실행",
                            "value": ".triggerHandler()",
                            "exceptionValue": "{{triggerHandler()}}"
                        }
                    ]
                },
                {
                    "subject": "Form Events",
                    "list": [
                        {
                            "link": "http://api.jquery.com/blur/",
                            "tooltlp": "이벤트 핸들러를 'blur' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".blur()",
                            "exceptionValue": "{{blur()}}"
                        },
                        {
                            "link": "http://api.jquery.com/change/",
                            "tooltlp": "이벤트 핸들러를 'change' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".change()",
                            "exceptionValue": "{{change()}}"
                        },
                        {
                            "link": "http://api.jquery.com/focus/",
                            "tooltlp": "이벤트 핸들러를 'focus' JavaScript 이벤트에 바인딩하거나 해당 이벤트를 요소에 트리거",
                            "value": ".focus()",
                            "exceptionValue": "{{focus()}}"
                        },
                        {
                            "link": "http://api.jquery.com/select/",
                            "tooltlp": "이벤트 핸들러를 'select' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".select()",
                            "exceptionValue": "{{select()}}"
                        },
                        {
                            "link": "http://api.jquery.com/submit/",
                            "tooltlp": "이벤트 핸들러를 'submit' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".submit()",
                            "exceptionValue": "{{submit()}}"
                        }
                    ]
                },
                {
                    "subject": "Keyboard Events",
                    "list": [
                        {
                            "link": "http://api.jquery.com/keydown/",
                            "tooltlp": "이벤트 핸들러를 'keydown' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".keydown()",
                            "exceptionValue": "{{keydown()}}"
                        },
                        {
                            "link": "http://api.jquery.com/keypress/",
                            "tooltlp": "이벤트 핸들러를 '키프레스' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".keypress()",
                            "exceptionValue": "{{keypress()}}"
                        },
                        {
                            "link": "http://api.jquery.com/keyup/",
                            "tooltlp": "이벤트 핸들러를 '키업' JavaScript 이벤트에 바인딩하거나 요소에서 해당 이벤트를 트리거",
                            "value": ".keyup()",
                            "exceptionValue": "{{keyup()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Effects",
            "items": [
                {
                    "subject": "Basics",
                    "list": [
                        {
                            "link": "http://api.jquery.com/hide/",
                            "tooltlp": "일치하는 요소를 숨김",
                            "value": ".hide()",
                            "exceptionValue": "{{hide()}}"
                        },
                        {
                            "link": "http://api.jquery.com/show/",
                            "tooltlp": "일치하는 요소를 표시",
                            "value": ".show()",
                            "exceptionValue": "{{show()}}"
                        },
                        {
                            "link": "http://api.jquery.com/toggle/",
                            "tooltlp": "일치하는 요소를 표시하거나 숨김",
                            "value": ".toggle()",
                            "exceptionValue": "{{toggle()}}"
                        }
                    ]
                },
                {
                    "subject": "Custom",
                    "list": [
                        {
                            "link": "http://api.jquery.com/animate",
                            "tooltlp": "CSS 속성 집합의 사용자 지정 애니메이션을 수행",
                            "value": ".animate()",
                            "exceptionValue": "{{animate()}}"
                        },
                        {
                            "link": "http://api.jquery.com/clearQueue",
                            "tooltlp": "아직 실행되지 않은 모든 항목을 대기열에서 제거",
                            "value": ".clearQueue()",
                            "exceptionValue": "{{clearQueue()}}"
                        },
                        {
                            "link": "http://api.jquery.com/delay",
                            "tooltlp": "대기열에서 후속 항목의 실행을 지연하도록 타이머를 설정",
                            "value": ".delay()",
                            "exceptionValue": "{{delay()}}"
                        },
                        {
                            "link": "http://api.jquery.com/dequeue",
                            "tooltlp": "일치하는 요소에 대해 대기열에서 다음 기능을 실행",
                            "value": ".dequeue()",
                            "exceptionValue": "{{dequeue()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.dequeue/",
                            "tooltlp": "일치하는 요소에 대해 대기열에서 다음 기능을 실행",
                            "value": "jQuery.dequeue()",
                            "exceptionValue": "{{jQuery-dequeue()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.fx.interval",
                            "tooltlp": "애니메이션이 실행되는 속도(밀리초)",
                            "value": "jQuery.fx.interval",
                            "exceptionValue": "{{jQuery-fx-interval}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.fx.off",
                            "tooltlp": "전 세계적으로 모든 애니메이션을 비활성화",
                            "value": "jQuery.fx.off",
                            "exceptionValue": "{{jQuery-fx-off}}"
                        },
                        {
                            "link": "http://api.jquery.com/queue",
                            "tooltlp": "일치하는 요소에서 실행할 기능의 대기열을 표시",
                            "value": ".queue()",
                            "exceptionValue": "{{queue()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.queue/",
                            "tooltlp": "일치하는 요소에서 실행할 기능의 대기열을 표시",
                            "value": "jQuery.queue()",
                            "exceptionValue": "{{jQuery-queue()}}"
                        },
                        {
                            "link": "http://api.jquery.com/stop",
                            "tooltlp": "일치하는 요소에 대해 현재 실행 중인 애니메이션을 중지",
                            "value": ".stop()",
                            "exceptionValue": "{{stop()}}"
                        }
                    ]
                },
                {
                    "subject": "Fading",
                    "list": [
                        {
                            "link": "http://api.jquery.com/fadeIn/",
                            "tooltlp": "일치하는 요소를 서서히 나타나게 하여 표시",
                            "value": ".fadeIn()",
                            "exceptionValue": "{{fadeIn()}}"
                        },
                        {
                            "link": "http://api.jquery.com/fadeOut/",
                            "tooltlp": "일치하는 요소를 서서히 사라지게 하여 숨김",
                            "value": ".fadeOut()",
                            "exceptionValue": "{{fadeOut()}}"
                        },
                        {
                            "link": "http://api.jquery.com/fadeTo/",
                            "tooltlp": "일치하는 요소의 불투명도를 조정",
                            "value": ".fadeTo()",
                            "exceptionValue": "{{fadeTo()}}"
                        },
                        {
                            "link": "http://api.jquery.com/fadeToggle/",
                            "tooltlp": "불투명도 애니메이션을 통해 일치하는 요소를 표시하거나 숨김",
                            "value": ".fadeToggle()",
                            "exceptionValue": "{{fadeToggle()}}"
                        }
                    ]
                },
                {
                    "subject": "Sliding",
                    "list": [
                        {
                            "link": "http://api.jquery.com/slideDown",
                            "tooltlp": "슬라이딩 동작으로 일치하는 요소를 표시",
                            "value": ".slideDown()",
                            "exceptionValue": "{{slideDown()}}"
                        },
                        {
                            "link": "http://api.jquery.com/slideToggle",
                            "tooltlp": "일치하는 요소를 슬라이딩 동작으로 표시하거나 숨김",
                            "value": ".slideToggle()",
                            "exceptionValue": "{{slideToggle()}}"
                        },
                        {
                            "link": "http://api.jquery.com/slideUp",
                            "tooltlp": "일치하는 요소를 슬라이딩 동작으로 숨김",
                            "value": ".slideUp()",
                            "exceptionValue": "{{slideUp()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Ajax",
            "items": [
                {
                    "subject": "Global Ajax Event Handlers",
                    "list": [
                        {
                            "link": "http://api.jquery.com/ajaxComplete/",
                            "tooltlp": "Ajax가 요청할 때 호출할 처리기를 등록. Ajax 이벤트",
                            "value": ".ajaxComplete()",
                            "exceptionValue": "{{ajaxComplete()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ajaxError/",
                            "tooltlp": "Ajax가 오류와 함께 완료 요청을 할 때 호출할 처리기를 등록. Ajax 이벤트",
                            "value": ".ajaxError()",
                            "exceptionValue": "{{ajaxError()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ajaxSend/",
                            "tooltlp": "Ajax 요청이 전송되기 전에 실행할 함수를 첨부. Ajax 이벤트",
                            "value": ".ajaxSend()",
                            "exceptionValue": "{{ajaxSend()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ajaxStart/",
                            "tooltlp": "첫 번째 Ajax 요청이 시작될 때 호출할 처리기를 등록. Ajax 이벤트",
                            "value": ".ajaxStart()",
                            "exceptionValue": "{{ajaxStart()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ajaxStop/",
                            "tooltlp": "모든 Ajax 요청이 완료되면 호출할 처리기를 등록. Ajax 이벤트",
                            "value": ".ajaxStop()",
                            "exceptionValue": "{{ajaxStop()}}"
                        },
                        {
                            "link": "http://api.jquery.com/ajaxSuccess/",
                            "tooltlp": "Ajax 요청이 성공적으로 완료될 때마다 실행할 함수를 첨부. Ajax 이벤트",
                            "value": ".ajaxSuccess()",
                            "exceptionValue": "{{ajaxSuccess()}}"
                        }
                    ]
                },
                {
                    "subject": "Helper Functions",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.param/",
                            "tooltlp": "URL 쿼리 문자열 또는 Ajax 요청에 사용하기에 적합한 배열 또는 객체의 일련화된 표현을 생성",
                            "value": "jQuery.param()",
                            "exceptionValue": "{{jQuery-param()}}"
                        },
                        {
                            "link": "http://api.jquery.com/serialize/",
                            "tooltlp": "양식 요소 집합을 제출할 문자열로 인코딩",
                            "value": ".serialize()",
                            "exceptionValue": "{{serialize()}}"
                        },
                        {
                            "link": "http://api.jquery.com/serializeArray/",
                            "tooltlp": "이름 및 값의 배열로 양식 요소 집합을 인코딩",
                            "value": ".serializeArray()",
                            "exceptionValue": "{{serializeArray()}}"
                        }
                    ]
                },
                {
                    "subject": "Low-Level Interface",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.ajax/",
                            "tooltlp": "비동기식 HTTP(Ajax) 요청을 수행",
                            "value": "jQuery.ajax()",
                            "exceptionValue": "{{jQuery-ajax()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.ajaxSetup",
                            "tooltlp": "이후 Ajax 요청에 대한 기본값을 설정",
                            "value": "jQuery.ajaxSetup()",
                            "exceptionValue": "{{jQuery-ajaxSetup()}}"
                        }
                    ]
                },
                {
                    "subject": "Shorthand Methods",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.get/",
                            "tooltlp": "HTTP GET 요청을 사용하여 서버에서 데이터를 로드",
                            "value": "jQuery.get()",
                            "exceptionValue": "{{jQuery-get()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.getJSON/",
                            "tooltlp": "GET HTTP 요청을 사용하여 서버에서 JSON 인코딩된 데이터를 로드",
                            "value": "jQuery.getJSON()",
                            "exceptionValue": "{{jQuery-getJSON()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.getScript/",
                            "tooltlp": "GET HTTP 요청을 사용하여 서버에서 JavaScript 파일을 로드한 다음 실행",
                            "value": "jQuery.getScript()",
                            "exceptionValue": "{{jQuery-getScript()}}"
                        },
                        {
                            "link": "http://api.jquery.com/load/",
                            "tooltlp": "서버에서 데이터를 로드하고 반환된 HTML을 일치하는 요소에 배치",
                            "value": ".load()",
                            "exceptionValue": "{{load()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.post/",
                            "tooltlp": "HTTP POST 요청을 사용하여 서버에서 데이터를 로드",
                            "value": "jQuery.post()",
                            "exceptionValue": "{{jQuery-post()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Core",
            "items": [
                {
                    "subject": "jQuery Object",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery/",
                            "tooltlp": "일련의 요소와 일치시키는 데 사용되는 CSS 선택자가 포함된 문자열을 수락",
                            "value": "jQuery()"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.noConflict/",
                            "tooltlp": "달러 변수에 대한 jQuery의 통제를 포기",
                            "value": "jQuery.noConflict()",
                            "exceptionValue": "{{jQuery-noConflict()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.sub/",
                            "tooltlp": "원래 jQuery 객체에 영향을 주지 않고 특성 및 메서드를 수정할 수 있는 jQuery의 새 사본을 작성",
                            "value": "jQuery.sub()",
                            "exceptionValue": "{{jQuery-sub()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.when/",
                            "tooltlp": "하나 이상의 객체(대개 비동기 이벤트를 나타내는 지연 객체)를 기반으로 콜백 기능을 실행할 수 있는 방법을 제공",
                            "value": "jQuery.when()",
                            "exceptionValue": "{{jQuery-when()}}"
                        }
                    ]
                },
                {
                    "subject": "DOM Element Methods",
                    "list": [
                        {
                            "link": "http://api.jquery.com/get/",
                            "tooltlp": "jQuery 객체와 일치하는 DOM 요소를 검색",
                            "value": ".get()",
                            "exceptionValue": "{{get()}}"
                        },
                        {
                            "link": "http://api.jquery.com/index/",
                            "tooltlp": "일치하는 요소 중에서 지정된 요소를 검색",
                            "value": ".index()",
                            "exceptionValue": "{{index()}}"
                        },
                        {
                            "link": "http://api.jquery.com/size/",
                            "tooltlp": "jQuery 객체의 요소 수를 반환",
                            "value": ".size()",
                            "exceptionValue": "{{size()}}"
                        },
                        {
                            "link": "http://api.jquery.com/toArray/",
                            "tooltlp": "jQuery 세트에 포함된 모든 DOM 요소를 배열로 검색",
                            "value": "toArray()"
                        }
                    ]
                },
                {
                    "subject": "Internals",
                    "list": [
                        {
                            "link": "http://api.jquery.com/context/",
                            "tooltlp": "DOM 노드 컨텍스트는 원래 jQuery()로 전달. 아무것도 전달되지 않은 경우, 컨텍스트는 문서가 될 가능성이 높음",
                            "value": ".context",
                            "exceptionValue": "{{context}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.error/",
                            "tooltlp": "문자열을 가져다가 해당 문자열을 포함하는 예외를 던짐",
                            "value": "jQuery.error",
                            "exceptionValue": "{{jQuery-error}}"
                        },
                        {
                            "link": "http://api.jquery.com/length/",
                            "tooltlp": "jQuery 객체의 요소 갯수",
                            "value": ".length",
                            "exceptionValue": "{{length}}"
                        },
                        {
                            "link": "http://api.jquery.com/pushStack/",
                            "tooltlp": "JQuery 스택에 DOM 요소 집합 추가",
                            "value": ".pushStack()",
                            "exceptionValue": "{{pushStack}}"
                        },
                        {
                            "link": "http://api.jquery.com/selector/",
                            "tooltlp": "선택자를 나타내는 선택자가 원래 jQuery()로 전달",
                            "value": ".selector",
                            "exceptionValue": "{{selector}}"
                        }
                    ]
                },
                {
                    "subject": "Deferred Object",
                    "list": [
                        {
                            "link": "http://api.jquery.com/deferred.always/",
                            "tooltlp": "지연된 객체가 확인되거나 거부될 때 호출할 처리기 추가",
                            "value": "deferred.always()",
                            "exceptionValue": "{{deferred-always()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.done/",
                            "tooltlp": "지연된 객체가 확인될 때 호출할 처리기 추가",
                            "value": "deferred.done()",
                            "exceptionValue": "{{deferred-done()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.fail/",
                            "tooltlp": "지연된 객체가 거부될 때 호출할 처리기 추가",
                            "value": "deferred.fail()",
                            "exceptionValue": "{{deferred-fail()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.isRejected/",
                            "tooltlp": "지연된 객체가 거부되었는지 여부를 결정",
                            "value": "deferred.isRejected()",
                            "exceptionValue": "{{deferred-isRejected()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.isResolved/",
                            "tooltlp": "지연된 객체가 해결되었는지 여부를 확인",
                            "value": "deferred.isResolved()",
                            "exceptionValue": "{{deferred-isResolved()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.notify/",
                            "tooltlp": "주어진 args가 있는 지연된 객체에 대해 progressCallbacks를 호출",
                            "value": "deferred.notify()",
                            "exceptionValue": "{{deferred-notify()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.notifyWith/",
                            "tooltlp": "지정된 컨텍스트와 args를 사용하여 지연된 객체에 대해 progressCallbacks를 호출",
                            "value": "deferred.notifyWith()",
                            "exceptionValue": "{{deferred-notifyWith()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.pipe/",
                            "tooltlp": "필터링 및/또는 체인 지연을 위한 유틸리티 방법",
                            "value": "deferred.pipe()",
                            "exceptionValue": "{{deferred-pipe()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.progress/",
                            "tooltlp": "지연된 객체가 진행률 알림을 생성할 때 호출할 처리기 추가",
                            "value": "deferred.progress()",
                            "exceptionValue": "{{deferred-progress()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.promise/",
                            "tooltlp": "지연된 약속 객체를 반환",
                            "value": "deferred.promise()",
                            "exceptionValue": "{{deferred-promise()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.reject/",
                            "tooltlp": "지연된 객체를 거부하고 지정된 args를 사용하여 failCallbacks를 호출",
                            "value": "deferred.reject()",
                            "exceptionValue": "{{deferred-reject()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.rejectWith/",
                            "tooltlp": "지연된 객체를 거부하고 지정된 컨텍스트와 args를 사용하여 failCallbacks를 호출",
                            "value": "deferred.rejectWith()",
                            "exceptionValue": "{{deferred-rejectWith()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.resolve/",
                            "tooltlp": "지연된 객체를 해결하고 지정된 args로 doneCallbacks를 호출",
                            "value": "deferred.resolve()",
                            "exceptionValue": "{{deferred-resolve()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.resolveWith/",
                            "tooltlp": "지연된 객체를 해결하고 지정된 컨텍스트와 args를 사용하여 완료된Callbacks를 호출",
                            "value": "deferred.resolveWith()",
                            "exceptionValue": "{{deferred-resolveWith()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.state/",
                            "tooltlp": "지연된 객체의 현재 상태를 결정",
                            "value": "deferred.state()",
                            "exceptionValue": "{{deferred-state()}}"
                        },
                        {
                            "link": "http://api.jquery.com/deferred.then/",
                            "tooltlp": "지연된 객체가 확인되거나 거부될 때 호출할 처리기 추가",
                            "value": "deferred.then()",
                            "exceptionValue": "{{deferred-then()}}"
                        },
                        {
                            "link": "http://api.jquery.com/promise/",
                            "tooltlp": "컬렉션에 바인딩된 특정 유형의 모든 작업이 대기 중이거나 완료되지 않은 경우를 관찰하려면 약속 객체를 반환",
                            "value": ".promise()",
                            "exceptionValue": "{{promise}}"
                        }
                    ]
                },
                {
                    "subject": "Callbacks Object",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.Callbacks/",
                            "tooltlp": "콜백 목록을 관리할 수 있는 강력한 방법을 제공하는 다목적 콜백 목록 객체",
                            "value": "jQuery.Callbacks()",
                            "exceptionValue": "{{jQuery-Callbacks()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.add/",
                            "tooltlp": "콜백 목록에 콜백 또는 콜백 컬렉션을 추가",
                            "value": "callbacks.add()",
                            "exceptionValue": "{{callbacks-add()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.disable/",
                            "tooltlp": "콜백 목록을 사용하지 않도록 설정",
                            "value": "callbacks.disable()",
                            "exceptionValue": "{{callbacks-disable()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.empty/",
                            "tooltlp": "목록에서 콜백을 모두 제거",
                            "value": "callbacks.empty()",
                            "exceptionValue": "{{callbacks-empty()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.fire/",
                            "tooltlp": "주어진 주장으로 모든 콜백을 부름",
                            "value": "callbacks.fire()",
                            "exceptionValue": "{{callbacks-fire()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.fired/",
                            "tooltlp": "콜백은 이미 한 번 이상 호출되었는지 확인",
                            "value": "callbacks.fired()",
                            "exceptionValue": "{{callbacks-fired()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.fireWith/",
                            "tooltlp": "주어진 컨텍스트와 인자가 있는 목록의 모든 콜백을 호출",
                            "value": "callbacks.fireWith()",
                            "exceptionValue": "{{callbacks-fireWith()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.has/",
                            "tooltlp": "제공된 콜백이 목록에 있는지 확인",
                            "value": "callbacks.has()",
                            "exceptionValue": "{{callbacks-has()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.lock/",
                            "tooltlp": "콜백 리스트를 현재 상태로 잠금",
                            "value": "callbacks.lock()",
                            "exceptionValue": "{{callbacks-lock()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.locked/",
                            "tooltlp": "콜백 리스트가 잠겼는지 여부를 결정",
                            "value": "callbacks.locked()",
                            "exceptionValue": "{{callbacks-locked()}}"
                        },
                        {
                            "link": "http://api.jquery.com/callbacks.remove/",
                            "tooltlp": "콜백 목록에서 콜백 또는 콜백 컬렉션을 제거",
                            "value": "callbacks.remove()",
                            "exceptionValue": "{{callbacks-remove()}}"
                        }
                    ]
                }
            ]
        },
        {
            "title": "Utilities",
            "items": [
                {
                    "subject": "Utilities",
                    "list": [
                        {
                            "link": "http://api.jquery.com/jQuery.contains/",
                            "tooltlp": "DOM 노드가 다른 DOM 노드 내에 있는지 확인",
                            "value": "jQuery.contains()",
                            "exceptionValue": "{{jQuery-contains()}}"
                        },
                        {
                            "link": "http://api.jquery.com/each/",
                            "tooltlp": "jQuery 객체에 반복하여 일치하는 각 요소에 대한 함수를 실행",
                            "value": ".each()",
                            "exceptionValue": "{{each()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.each/",
                            "tooltlp": "객체와 배열 모두에 대해 매끄럽게 반복하는 데 사용할 수 있는 일반 반복기 기능. 길이 특성(함수의 인자 객체 등)을 갖는 배열 및 배열 유사 객체는 숫자 색인으로 반복되며, 0부터 길이-1까지. 다른 객체는 명명된 속성을 통해 반복",
                            "value": "jQuery.each()",
                            "exceptionValue": "{{jQuery-each()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.extend/",
                            "tooltlp": "두 개 이상의 객체의 내용을 첫 번째 객체에 병합",
                            "value": "jQuery.extend()",
                            "exceptionValue": "{{jQuery-extend()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.globalEval/",
                            "tooltlp": "일부 JavaScript 코드를 전체적으로 실행",
                            "value": "jQuery.globalEval()",
                            "exceptionValue": "{{jQuery-globalEval()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.grep/",
                            "tooltlp": "필터 기능을 만족하는 배열 요소를 찾음. 원래 배열은 영향을 받지 않음",
                            "value": "jQuery.grep()",
                            "exceptionValue": "{{jQuery-grep()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.inArray/",
                            "tooltlp": "배열내에서 지정된 값을 검색하고 인덱스를 반환(또는 찾을 수 없는 경우 -1)",
                            "value": "jQuery.inArray()",
                            "exceptionValue": "{{jQuery-inArray()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isArray/",
                            "tooltlp": "인자가 배열인지 여부를 결정",
                            "value": "jQuery.isArray()",
                            "exceptionValue": "{{jQuery-isArray()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isEmptyObject/",
                            "tooltlp": "객체가 비어 있는지 확인(속성이 포함되어 있지 않음)",
                            "value": "jQuery.isEmptyObject()",
                            "exceptionValue": "{{jQuery-isEmptyObject()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isFunction/",
                            "tooltlp": "전달된 인자가 Javascript 함수 객체인지 여부를 결정",
                            "value": "jQuery.isFunction()",
                            "exceptionValue": "{{jQuery-isFunction()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isNumeric/",
                            "tooltlp": "숫자인지 아닌지 확인",
                            "value": "jQuery.isNumeric()",
                            "exceptionValue": "{{jQuery-isNumeric()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isPlainObject/",
                            "tooltlp": "객체가 일반 객체인지 확인('{}' 또는 'new object'를 사용하여 생성)",
                            "value": "jQuery.isPlainObject()",
                            "exceptionValue": "{{jQuery-isPlainObject()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isWindow/",
                            "tooltlp": "window창인지 아닌지 확인",
                            "value": "jQuery.isWindow()",
                            "exceptionValue": "{{jQuery-isWindow()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.isXMLDoc/",
                            "tooltlp": "DOM 노드가 XML 문서(또는 XML 문서) 내에 있는지 확인",
                            "value": "jQuery.isXMLDoc()",
                            "exceptionValue": "{{jQuery-isXMLDoc()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.makeArray/",
                            "tooltlp": "배열과 유사한 객체를 실제 JavaScript 배열로 변환",
                            "value": "jQuery.makeArray()",
                            "exceptionValue": "{{jQuery-makeArray()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.map/",
                            "tooltlp": "배열 또는 배열과 같은 객체의 모든 항목을 다른 배열의 항목으로 변환",
                            "value": "jQuery.map()",
                            "exceptionValue": "{{jQuery-map()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.merge/",
                            "tooltlp": "두 배열의 내용을 첫 번째 배열로 병합",
                            "value": "jQuery.merge()",
                            "exceptionValue": "{{jQuery-merge()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.noop/",
                            "tooltlp": "빈 기능",
                            "value": "jQuery.noop()",
                            "exceptionValue": "{{jQuery-noop()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.now/",
                            "tooltlp": "현재 시간을 나타내는 숫자를 반환",
                            "value": "jQuery.now()",
                            "exceptionValue": "{{jQuery-now()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.parseJSON/",
                            "tooltlp": "잘 구성된 JSON 문자열을 가져와서 결과 JavaScript 객체를 반환",
                            "value": "jQuery.parseJSON()",
                            "exceptionValue": "{{jQuery-parseJSON()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.parseXML/",
                            "tooltlp": "XML 문서에 문자열을 구문 분석",
                            "value": "jQuery.parseXML()",
                            "exceptionValue": "{{jQuery-parseXML()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.proxy",
                            "tooltlp": "기능을 가져다가 항상 특정 컨텍스트를 갖는 새로운 기능을 반환",
                            "value": "jQuery.proxy()",
                            "exceptionValue": "{{jQuery-proxy()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.support/",
                            "tooltlp": "다양한 브라우저 기능 또는 버그가 있는 속성을 나타내는 속성 모음",
                            "value": "jQuery.support",
                            "exceptionValue": "{{jQuery-support}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.trim/",
                            "tooltlp": "문자열의 시작과 끝에서 공백을 제거",
                            "value": "jQuery.trim()",
                            "exceptionValue": "{{jQuery-trim()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.type/",
                            "tooltlp": "객체의 내부 JavaScript [[Class]]를 결정",
                            "value": "jQuery.type()",
                            "exceptionValue": "{{jQuery-type()}}"
                        },
                        {
                            "link": "http://api.jquery.com/jQuery.unique/",
                            "tooltlp": "중복 항목이 제거된 상태에서 DOM 요소 배열 정렬 이 기능은 문자열이나 숫자가 아닌 DOM 요소의 배열에서만 작동한다는 점에 유의",
                            "value": "jQuery.unique()",
                            "exceptionValue": "{{jQuery-unique()}}"
                        }
                    ]
                }
            ]
        }
    ]
}
